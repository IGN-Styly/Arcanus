
plugins {
    id 'java-library'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.145'
}


group = mod_group_id
version = mod_version

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)
minecraft {
    accessTransformers {
        file('src/main/resources/META-INF/accesstransformer.cfg')
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url = "https://maven.enginehub.org/repo/" }
    maven {
        url "https://code.redspace.io/releases"
    }
    maven {
        url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/"
        content {
            includeGroup("software.bernie.geckolib")
        }
    }
    maven { url = "https://maven.theillusivec4.top" }
    maven { url = "https://cursemaven.com" }
    maven { url = "https://maven.blamejared.com" }
    maven { url = "https://maven.kosmx.dev/" }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
    }

}

dependencies {

    // FORGE ******************************************************************************************************
    implementation "net.neoforged:neoforge:${neo_version}"

    // GECKOLIB ***************************************************************************************************
    implementation "software.bernie.geckolib:geckolib-neoforge-${minecraft_version}:${geckolib_version}"

    // CAELUS *****************************************************************************************************
    compileOnly "com.illusivesoulworks.caelus:caelus-neoforge:${caelus_version}:api"
    localRuntime "com.illusivesoulworks.caelus:caelus-neoforge:${caelus_version}"

    // PLAYER ANIMATOR ********************************************************************************************
    //compileOnly "dev.kosmx.player-anim:player-animation-lib-forge:${player_animator_version}"
    implementation "dev.kosmx.player-anim:player-animation-lib-forge:${player_animator_version}"
    jarJar(group: "dev.kosmx.player-anim", name: "player-animation-lib-forge", version: "[${player_animator_version},${player_animator_version}]")

    // TETRA ******************************************************************************************************
    //compileOnly "se.mickelus.mutil:mutil:${mutil_version}"
    compileOnly "curse.maven:tetra-${tetra_version}"
    compileOnly "se.mickelus.mutil:mutil:${mutil_version}"

    implementation "io.redspace:irons_spellbooks:1.21-3.4.1"
    implementation "com.google.code.gson:gson:${gson_version}"

    compileOnly "mezz.jei:jei-${jei_mc_version}-common-api:${jei_version}"
    compileOnly "mezz.jei:jei-${jei_mc_version}-neoforge-api:${jei_version}"
    runtimeOnly "mezz.jei:jei-${jei_mc_version}-neoforge:${jei_version}"

    // CURIOS
    implementation "curse.maven:adorned-1036809:5546365"
    // APOTHEOSIS
    compileOnly "curse.maven:apotheosis-${apotheosis_version}"
    localRuntime "curse.maven:mouse-tweaks-60089:5437296"
}
tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version      : minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neo_version            : neo_version,
            neo_version_range      : neo_version_range,
            loader_version_range   : loader_version_range,
            caelus_version         : caelus_version,
            geckolib_version       : geckolib_version,
            player_animator_version: player_animator_version,
            mod_id                 : mod_id,
            mod_name               : mod_name,
            mod_version            : mod_version,
            mod_license            : mod_license,
            mod_authors            : mod_authors,
            mod_credits            : mod_credits,
            mod_description        : mod_description,
            //mod_display_url        : mod_display_url,
            //mod_issue_tracker      : mod_issue_tracker,
            //mod_logo_file          : mod_logo_file
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties
    }
}
jar {
    manifest {
        attributes([
                "Specification-Title"     : mod_name,
                "Specification-Vendor"    : mod_authors,
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : mod_authors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
        ])
    }
    exclude('**/*.psd')
    exclude('**/*.bbmodel')
}
java {
    withSourcesJar()
    //withJavadocJar()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

tasks.register('copyAnimations', Copy) {
    from "src/main/resources/assets/${mod_id}/player_animation"
    include 'casting_animations.json'
    into "src/main/resources/assets/${mod_id}/animations"
}

tasks.classes.dependsOn(tasks.copyAnimations)
tasks.processResources.dependsOn(tasks.copyAnimations)
tasks.sourcesJar.dependsOn(tasks.copyAnimations)

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}